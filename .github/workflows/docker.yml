name: Publish Production Docker Images

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
  release:
    types: [published]

concurrency: ${{ github.workflow }}-${{ github.ref }}
jobs:
  publish-docker:
    name: Publish Production Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      IMAGE_NAME: self-hosting-maishatu

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Docker
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push docker container
        run: |
          docker build -t $IMAGE_NAME .
          docker tag $IMAGE_NAME:latest pgathondu/$IMAGE_NAME:latest
          docker push pgathondu/$IMAGE_NAME:latest

      - name: Cleanup old Docker images
        run: |
          mapfile -t tags < <(curl -s https://registry.hub.docker.com/v2/repositories/pgathondu/$IMAGE_NAME/tags?page_size=1024 | jq -r ".results[].name" | grep -P "^\d+\.\d+\.\d+$" | sort -V | head -n -5)
          for tag in "${tags[@]}"; do
            docker rmi pgathondu/$IMAGE_NAME:$tag || true
            docker push --delete pgathondu/$IMAGE_NAME:$tag || true
          done
